{"version":3,"sources":["src/LoadingScene.js","App.js","src/image/coin-01.png","src/image/coin-02.png","src/fonts/Olylum-Font.ttf","src/fonts/FC-Minimal-Regular.ttf","src/fonts/Pind-text.ttf"],"names":["ImgCoin","require","BGcolors","styles","StyleSheet","create","container","alignItems","justifyContent","flex","content","backgroundColor","counter","fontFamily","fontSize","color","answer","padding","fontWeight","image","width","height","button","marginTop","paddingVertical","paddingHorizontal","textButton","LoadingScene","coinState","doOnClick","useState","setCounter","useEffect","timer","setTimeout","prv","clearTimeout","Math","round","random","View","style","Text","select","CheckAnswer","Image","source","TouchableOpacity","onPress","compose","App","useFonts","Olylum","FcMinimal","Pind","play","setPlay","coinSelect","setSelect","logo","header","buttonGroup","title","fixToText","textAlign","marginBottom","borderWidth","borderRadius","borderColor","marginVertical","flexDirection","module","exports"],"mappings":"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","file":"static/js/app.2e27a323.chunk.js","sourcesContent":["import React, { useState , useEffect } from 'react';\r\nimport { View, Text , StyleSheet , Button , Image , TouchableOpacity} from 'react-native';\r\n\r\nconst coin01 = require('./image/coin-01.png')\r\nconst coin02= require('./image/coin-02.png')\r\n\r\nconst ImgCoin = [coin01,coin02];\r\n\r\nconst randomAnser = () =>{\r\n    const rndNum = Math.round(Math.random()*1)\r\n    return rndNum\r\n}\r\n\r\nconst BGcolors = ['#55efc4','#81ecec','#74b9ff']\r\n\r\nconst SelectType = (select) =>{\r\n    if(select === 0)\r\n        return '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏´‡∏±‡∏ß'\r\n    else\r\n        return '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡πâ‡∏≠‡∏¢'\r\n}\r\n\r\nconst CheckAnswer = (select,answer) =>{\r\n    if(select == answer)\r\n        return <Text style={{color: 'green'}}>‡∏ñ‡∏π‡∏Å</Text>\r\n    else\r\n        return <Text style={{color: 'red' }}>‡∏ú‡∏¥‡∏î</Text>\r\n}\r\n\r\nconst LoadingScene = ({coinState,doOnClick}) => {\r\n\r\n    const [counter, setCounter] = useState(3)\r\n    useEffect(() => {\r\n        if(counter === 0) return;\r\n        const timer = setTimeout(() => {\r\n            setCounter(prv => prv - 1)\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [counter])\r\n\r\n    const answer = randomAnser()\r\n    \r\n    return counter === 0 ? (\r\n                <View style={styles.content}>\r\n                    <Text style={styles.answer}>‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠ {CheckAnswer(coinState,answer)} </Text>\r\n                    <Image  style={styles.image} source={ImgCoin[answer]}/>\r\n                    <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => doOnClick()}\r\n                    >\r\n                        <Text style={styles.textButton}>‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ) :  \r\n            <View  style={StyleSheet.compose({ backgroundColor : BGcolors[counter -1]},styles.container)}>\r\n                <Text style={styles.counter}>Loading..</Text>\r\n                <Text style={styles.counter}>{SelectType(coinState)}</Text>\r\n                <Text style={styles.counter}>{counter}</Text>\r\n            </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n    },\r\n    content:{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: '#ffda79',\r\n        flex: 1,\r\n    },\r\n    counter:{\r\n        fontFamily : 'Olylum',\r\n        fontSize: 50,\r\n        color: 'white',\r\n    },\r\n    answer:{\r\n        fontSize: 40,\r\n        padding: 30,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'FcMinimal'\r\n    },\r\n    image:{\r\n        width: 150,\r\n        height: 150,\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#192a56',\r\n        marginTop : 50,\r\n        paddingVertical: 10,\r\n        paddingHorizontal : 20,\r\n      },\r\n      textButton: {\r\n        color: '#fbc531',\r\n        fontWeight: 'bold',\r\n      },\r\n})\r\n\r\n\r\nexport default LoadingScene;\r\n","import React, { useState } from 'react';\nimport { StyleSheet, Text, View , Button , TouchableOpacity} from 'react-native';\nimport LoadingScene from './src/LoadingScene';\nimport { useFonts } from 'expo-font';\n\nexport default function App() {\n  const [loaded] = useFonts({\n    Olylum: require('./src/fonts/Olylum-Font.ttf'),\n    FcMinimal: require('./src/fonts/FC-Minimal-Regular.ttf'),\n    Pind: require('./src/fonts/Pind-text.ttf'),\n  });\n\n  const [play, setPlay] = useState(false)\n\n  const [coinSelect, setSelect] = useState(0)\n\n  const onPress = (select) => {\n      setPlay(true)\n      setSelect(select)\n  };\n\n  return play ? (\n      <LoadingScene coinState={coinSelect} doOnClick={() => setPlay(false)} />\n    ): (\n    <View style={styles.container}>\n        <Text style={styles.logo}>ü•Æ</Text>\n        <Text style={styles.header}>Welcome to FlipCoin <br/>Up Project!</Text>\n      <View style={styles.buttonGroup}>\n      </View>\n    <View>\n      <Text style={styles.title}>\n        ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å \"‡∏´‡∏±‡∏ß\" ‡∏´‡∏£‡∏∑‡∏≠ \"‡∏Å‡πâ‡∏≠‡∏¢\"\n      </Text>\n      <View style={styles.fixToText}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => onPress(0)}\n        >\n          <Text style={styles.textButton}>    ‡∏´‡∏±‡∏ß    </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n        style={styles.button}\n        onPress={() => onPress(1)}\n        >\n          <Text style={styles.textButton}>  ‡∏Å‡πâ‡∏≠‡∏¢  </Text>\n      </TouchableOpacity>\n      </View>\n    </View>\n    </View>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffda79',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header:{\n    fontFamily: 'FcMinimal',\n    fontSize: 40,\n    padding: 30,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: '#222f3e',\n  },\n  logo:{\n    marginBottom: -10,\n    fontSize:80,\n  },\n  title: {\n    padding: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"white\",\n    textAlign: 'center',\n    marginVertical: 8,\n    fontWeight: 'bold',\n    marginTop: -10,\n    color: '#222f3e',\n    fontFamily : 'FcMinimal',\n    fontSize: 25,\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#192a56',\n    paddingVertical: 10,\n    paddingHorizontal : 20,\n  },\n  textButton: {\n    color: '#fbc531',\n    fontWeight: 'bold',\n  },\n  fixToText: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/coin-01.72d29bc0.png\";","module.exports = __webpack_public_path__ + \"static/media/coin-02.199a798d.png\";","module.exports = __webpack_public_path__ + \"./fonts/Olylum-Font.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/FC-Minimal-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Pind-text.ttf\";"],"sourceRoot":""}